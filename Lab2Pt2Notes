<button type = "button" class = "add__button">Add</button>

document.querySelector(".add__button").addEventListener("click", createCard);

document.querySelector(".myContacts").addEventListener("click", deleteCard);
//instead of querying for the image, we are saying, give us the myContacts element so everything inside of it inherits the click event. You don't want to add a new click event for every element on the page

function deleteCard(event) { //we need the event object so we can access its properties (target gives us the actual element we have clicked on, so we can see what the tagName is)
    //console.log(event);
    if (event.target.tagName === "IMG") {
        console.log("this can be deleted.");
        //need to write code to delete the parent of event.target
    }
}

//you can just create a new function

function createCard(event) {
    //console.log(event.target);
    //need to find a way to select all of our inputs -->
    event.preventDefault(); //only add this if using "Submit" event listener
    let inputElements = document.querySelectorAll("input"); //this gives us an array we can iterate through (list of nodes)
    //need to store the list of nodes in a variables, which is why we add let "inputElements =" to the front
    console.log(inputElements[0].value); //"[0].value" gives us access to the value of what we put in the first input ...in the array of inputElements objects
    //to get the data and use it, we will always use the value property
    console.log(inputElements[1].value);
    console.log(inputElements[2].value); //arrays don't have a value property

    let div = document.createElement("div"); //all this does is create a div node, then we initialize and store it to a variable 
    div.innerHTML = `
    <p>Name: ${inputElements[0].value}</p>
    <p>Email: ${inputElements[1].value}</p>
    <p>Phone: ${inputElements[2].value}</p>
    <img class="deleteButton" src="image.png">
    `;
    //this lets us access the HTML that our div will have, so we can reassign what will be in our div
    //you can set the inputElements values to a variable, but it doesn't add any value (it's already stored in this file)
    //now we need to append this div to the card with a class of compactContainer, but first we have to select that node
    document.querySelector(".compactContainer").append(div);
    for (let input of inputElements) {
    input.value = ""; //this clears the inputs so they are empty
    }
}

//you assign a parameter called event that, when the event happens, represents the actual event that occurred 
//to see the event object and all of its information, console.log (event)
//the event parameter is a reference to what the event looks like
//you typically look at the target for the event object 
//event.target is the individual element you interacted with. "What element actually triggered this event to happen?"
//if you use an anonymous function, the function gets placed in the code block, not below it
//you can/need to look up what events can be run on what functions

document.querySelector(".add__button").addEventListener("click", book.add(info)); //or you can add a submit event to the form element, e.g. document.querySelector("form").addEventListener("submit", book.add(info));. This allows the user to just hit Enter to submit

document.querySelector(".myContacts").addEventListener("click", book.deleteAt(index)); //in this case, in the add method, we need to write event.preventDefault(); so that is does not refresh the page. We can also remove type = button.

//need to move the code from the add function into the add method, and the delete function into the delete method